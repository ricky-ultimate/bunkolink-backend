// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Book {
    id              Int            @id @default(autoincrement())
    title           String
    author          String
    ISBN            String         @unique
    availableCopies Int
    borrowedBooks   BorrowedBook[]
}

model Student {
    id            Int            @id @default(autoincrement())
    name          String
    matricNumber  String         @unique
    level         String
    department    String
    borrowedBooks BorrowedBook[]
    user          User?          @relation(fields: [userId], references: [id])

    userId Int? @unique
}

model BorrowedBook {
    id         Int       @id @default(autoincrement())
    bookId     Int
    studentId  Int
    borrowDate DateTime  @default(now())
    returnDate DateTime?

    book    Book    @relation(fields: [bookId], references: [id])
    student Student @relation(fields: [studentId], references: [id])
}

model AuditLog {
    id         Int      @id @default(autoincrement())
    action     String
    entityType String
    entityId   Int
    message    String
    timestamp  DateTime @default(now())
}

model User {
    id       Int      @id @default(autoincrement())
    email    String   @unique
    password String
    role     Role     @default(USER)
    student  Student?

    studentId Int? @unique

    @@map("users")
}

enum Role {
    ADMIN
    USER
    STUDENT_LIBRARIAN
}
